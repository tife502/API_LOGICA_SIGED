2025-10-03T16:46:18.274Z error: Error en middleware de autenticación
2025-10-03T16:55:29.133Z error: PrismaClientValidationError: 
Invalid `this.prisma.usuario.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:197:40

  194 async createUsuario(data: PrismaInterfaces.ICreateUsuario) {
  195   try {
  196     logger.info('Creando nuevo usuario', { data: { ...data, contrasena: '[HIDDEN]' } });
→ 197     return await this.prisma.usuario.create({
            data: {
              tipo_documento: "CC",
              documento: "1088238704",
              nombre: "Jean",
              apellido: "Duran",
              email: "jean.duran@superadmin.com",
              contrasena: "Admin123456",
              rol: "super_Admin",
                   ~~~~~~~~~~~~~
              estado: "activo"
            }
          })

Invalid value for argument `rol`. Expected usuario_rol.
    at throwValidationException (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-03T16:55:29.133Z error: PrismaClientValidationError: 
Invalid `this.prisma.usuario.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:197:40

  194 async createUsuario(data: PrismaInterfaces.ICreateUsuario) {
  195   try {
  196     logger.info('Creando nuevo usuario', { data: { ...data, contrasena: '[HIDDEN]' } });
→ 197     return await this.prisma.usuario.create({
            data: {
              tipo_documento: "CC",
              documento: "1088238704",
              nombre: "Jean",
              apellido: "Duran",
              email: "jean.duran@superadmin.com",
              contrasena: "Admin123456",
              rol: "super_Admin",
                   ~~~~~~~~~~~~~
              estado: "activo"
            }
          })

Invalid value for argument `rol`. Expected usuario_rol.
    at throwValidationException (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-03T18:52:00.426Z error: PrismaClientValidationError: 
Invalid `this.prisma.empleado.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:26:41

  23 async createEmpleado(data: PrismaInterfaces.ICreateEmpleado) {
  24   try {
  25     logger.info('Creando nuevo empleado', { data });
→ 26     return await this.prisma.empleado.create({
           data: {
             tipo_documento: "CC",
             documento: "12345678901",
             nombre: "María Elena",
             apellido: "García Rodríguez",
             email: "maria.garcia@colegio.edu.co",
             direccion: "Calle 123 #45-67, Bogotá",
             cargo: "docente",
                    ~~~~~~~~~
             estado: "activo"
           }
         })

Invalid value for argument `cargo`. Expected empleado_cargo.
    at throwValidationException (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-03T18:52:00.427Z error: PrismaClientValidationError: 
Invalid `this.prisma.empleado.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:26:41

  23 async createEmpleado(data: PrismaInterfaces.ICreateEmpleado) {
  24   try {
  25     logger.info('Creando nuevo empleado', { data });
→ 26     return await this.prisma.empleado.create({
           data: {
             tipo_documento: "CC",
             documento: "12345678901",
             nombre: "María Elena",
             apellido: "García Rodríguez",
             email: "maria.garcia@colegio.edu.co",
             direccion: "Calle 123 #45-67, Bogotá",
             cargo: "docente",
                    ~~~~~~~~~
             estado: "activo"
           }
         })

Invalid value for argument `cargo`. Expected empleado_cargo.
    at throwValidationException (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-03T18:57:37.948Z error: PrismaClientKnownRequestError: 
Invalid `this.prisma.empleado.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:26:41

  23 async createEmpleado(data: PrismaInterfaces.ICreateEmpleado) {
  24   try {
  25     logger.info('Creando nuevo empleado', { data });
→ 26     return await this.prisma.empleado.create(
Unique constraint failed on the constraint: `documento`
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-03T18:57:37.949Z error: PrismaClientKnownRequestError: 
Invalid `this.prisma.empleado.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:26:41

  23 async createEmpleado(data: PrismaInterfaces.ICreateEmpleado) {
  24   try {
  25     logger.info('Creando nuevo empleado', { data });
→ 26     return await this.prisma.empleado.create(
Unique constraint failed on the constraint: `documento`
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-03T19:12:03.866Z error: Error en middleware de autenticación
2025-10-03T19:12:10.681Z error: Error en middleware de autenticación
2025-10-04T16:03:23.281Z error: Error: Ya existe un empleado activo con el documento 87654321098
    at RectorService.<anonymous> (/home/finova/api_basica/src/modulos/empleado/metodos/rector.service.ts:392:11)
    at Generator.next (<anonymous>)
    at fulfilled (/home/finova/api_basica/src/modulos/empleado/metodos/rector.service.ts:5:58)
2025-10-04T16:03:23.282Z error: Error: Ya existe un empleado activo con el documento 87654321098
    at RectorService.<anonymous> (/home/finova/api_basica/src/modulos/empleado/metodos/rector.service.ts:392:11)
    at Generator.next (<anonymous>)
    at fulfilled (/home/finova/api_basica/src/modulos/empleado/metodos/rector.service.ts:5:58)
2025-10-04T16:29:52.249Z error: PrismaClientValidationError: 
Invalid `prisma.informacion_academica.create()` invocation in
/home/finova/api_basica/src/modulos/empleado/metodos/empleado.service.ts:65:67

  62 // 4. Crear información académica si se proporciona
  63 let informacionAcademica = null;
  64 if (data.informacionAcademica) {
→ 65   informacionAcademica = await prisma.informacion_academica.create({
         data: {
           nivel_academico: "licenciada",
                            ~~~~~~~~~~~~
           anos_experiencia: 8,
           institucion: "Universidad Tecnologica De Pereira",
           titulo: "Licenciatura en Matemáticas",
           id: "4d6a69b6-eaaa-4c0b-a89d-82880bcfe671",
           empleado_id: "657ced33-3f1e-427d-9523-b88eb072683e",
           created_at: new Date("2025-10-04T16:29:52.104Z"),
           updated_at: new Date("2025-10-04T16:29:52.104Z")
         }
       })

Invalid value for argument `nivel_academico`. Expected informacion_academica_nivel_academico.
    at throwValidationException (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-04T16:29:52.249Z error: PrismaClientValidationError: 
Invalid `prisma.informacion_academica.create()` invocation in
/home/finova/api_basica/src/modulos/empleado/metodos/empleado.service.ts:65:67

  62 // 4. Crear información académica si se proporciona
  63 let informacionAcademica = null;
  64 if (data.informacionAcademica) {
→ 65   informacionAcademica = await prisma.informacion_academica.create({
         data: {
           nivel_academico: "licenciada",
                            ~~~~~~~~~~~~
           anos_experiencia: 8,
           institucion: "Universidad Tecnologica De Pereira",
           titulo: "Licenciatura en Matemáticas",
           id: "4d6a69b6-eaaa-4c0b-a89d-82880bcfe671",
           empleado_id: "657ced33-3f1e-427d-9523-b88eb072683e",
           created_at: new Date("2025-10-04T16:29:52.104Z"),
           updated_at: new Date("2025-10-04T16:29:52.104Z")
         }
       })

Invalid value for argument `nivel_academico`. Expected informacion_academica_nivel_academico.
    at throwValidationException (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-04T17:02:34.036Z error: PrismaClientKnownRequestError: 
Invalid `this.prisma.sede.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:342:37

  339 async createSede(data: PrismaInterfaces.ICreateSede) {
  340   try {
  341     logger.info('Creando nueva sede', { data });
→ 342     return await this.prisma.sede.create(
Unique constraint failed on the constraint: `codigo_DANE`
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-04T17:18:04.721Z error: PrismaClientKnownRequestError: 
Invalid `this.prisma.empleado.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:26:41

  23 async createEmpleado(data: PrismaInterfaces.ICreateEmpleado) {
  24   try {
  25     logger.info('Creando nuevo empleado', { data });
→ 26     return await this.prisma.empleado.create(
Unique constraint failed on the constraint: `documento`
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-04T17:18:04.722Z error: PrismaClientKnownRequestError: 
Invalid `this.prisma.empleado.create()` invocation in
/home/finova/api_basica/src/prisma/prisma.service.ts:26:41

  23 async createEmpleado(data: PrismaInterfaces.ICreateEmpleado) {
  24   try {
  25     logger.info('Creando nuevo empleado', { data });
→ 26     return await this.prisma.empleado.create(
Unique constraint failed on the constraint: `documento`
    at ei.handleRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/finova/api_basica/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-05T01:39:58.436Z error: PrismaClientValidationError: 
Invalid `this.prisma.comentario_empleado.create()` invocation in
/home/node/app/src/prisma/prisma.service.ts:1221:52

  1218 async createComentarioEmpleado(data: PrismaInterfaces.ICreateComentarioEmpleado) {
  1219   try {
  1220     logger.info('Creando comentario de empleado', { data });
→ 1221     return await this.prisma.comentario_empleado.create({
             data: {
               empleado_id: "3389ecbe-a18c-11f0-99f3-0242ac120002",
               usuario_id: "5f0e4a36-a13d-11f0-99f3-0242ac120002",
           +   observacion: String
             },
             include: {
               empleado: true,
               usuario: true
             }
           })

Argument `observacion` is missing.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-05T01:39:58.438Z error: PrismaClientValidationError: 
Invalid `this.prisma.comentario_empleado.create()` invocation in
/home/node/app/src/prisma/prisma.service.ts:1221:52

  1218 async createComentarioEmpleado(data: PrismaInterfaces.ICreateComentarioEmpleado) {
  1219   try {
  1220     logger.info('Creando comentario de empleado', { data });
→ 1221     return await this.prisma.comentario_empleado.create({
             data: {
               empleado_id: "3389ecbe-a18c-11f0-99f3-0242ac120002",
               usuario_id: "5f0e4a36-a13d-11f0-99f3-0242ac120002",
           +   observacion: String
             },
             include: {
               empleado: true,
               usuario: true
             }
           })

Argument `observacion` is missing.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-06T18:12:46.484Z error: PrismaClientValidationError: 
Invalid `this.prisma.horas_extra.create()` invocation in
/home/node/app/src/modulos/horas.extras/horas.extra.controller.ts:81:62

  78 }
  79 
  80 // Crear el registro de horas extra
→ 81 const nuevasHorasExtra = await this.prisma.horas_extra.create({
       data: {
         empleado_id: "c372ba67-823b-45b4-b5d5-fa4739032909",
         sede_id: "47c2ad3e-c6c7-4b4f-9a66-086fc4f2a360",
         cantidad_horas: 4.5,
         fecha_realizacion: new Date("2025-10-06T00:00:00.000Z"),
         jornada: "manana",
                  ~~~~~~~~
         observacion: "Horas extra por actividad especial"
       },
       include: {
         empleado: {
           select: {
             id: true,
             nombre: true,
             apellido: true,
             documento: true
           }
         },
         sede: {
           select: {
             id: true,
             nombre: true
           }
         },
         documentos_horas_extra: true
       }
     })

Invalid value for argument `jornada`. Expected horas_extra_jornada.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-06T18:13:11.242Z error: PrismaClientValidationError: 
Invalid `this.prisma.horas_extra.create()` invocation in
/home/node/app/src/modulos/horas.extras/horas.extra.controller.ts:81:62

  78 }
  79 
  80 // Crear el registro de horas extra
→ 81 const nuevasHorasExtra = await this.prisma.horas_extra.create({
       data: {
         empleado_id: "c372ba67-823b-45b4-b5d5-fa4739032909",
         sede_id: "47c2ad3e-c6c7-4b4f-9a66-086fc4f2a360",
         cantidad_horas: 4.5,
         fecha_realizacion: new Date("2025-10-06T00:00:00.000Z"),
         jornada: "manana",
                  ~~~~~~~~
         observacion: "Horas extra por actividad especial"
       },
       include: {
         empleado: {
           select: {
             id: true,
             nombre: true,
             apellido: true,
             documento: true
           }
         },
         sede: {
           select: {
             id: true,
             nombre: true
           }
         },
         documentos_horas_extra: true
       }
     })

Invalid value for argument `jornada`. Expected horas_extra_jornada.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-07T18:12:18.126Z error: Error enviando SMS de recuperación:
2025-10-07T18:12:18.127Z error: Error enviando SMS de recuperación
2025-10-07T18:14:01.233Z error: Error enviando SMS de recuperación:
2025-10-07T18:14:01.236Z error: Error enviando SMS de recuperación
2025-10-07T18:14:33.971Z error: Error enviando SMS de recuperación:
2025-10-07T18:14:33.974Z error: Error enviando SMS de recuperación
2025-10-07T18:18:31.918Z error: Error enviando SMS de recuperación:
2025-10-07T18:18:31.921Z error: Error enviando SMS de recuperación
2025-10-07T18:18:47.833Z error: Error enviando SMS de recuperación:
2025-10-07T18:18:47.836Z error: Error enviando SMS de recuperación
2025-10-07T18:20:52.636Z error: Error enviando SMS de recuperación:
2025-10-07T18:20:52.638Z error: Error enviando SMS de recuperación
2025-10-07T18:22:11.254Z error: Error enviando SMS de recuperación:
2025-10-07T18:22:11.256Z error: Error enviando SMS de recuperación
2025-10-07T18:23:47.474Z error: Error enviando SMS de recuperación:
2025-10-07T18:23:47.477Z error: Error enviando SMS de recuperación
2025-10-07T18:24:16.091Z error: Error enviando SMS de recuperación:
2025-10-07T18:24:16.093Z error: Error enviando SMS de recuperación
2025-10-07T18:27:00.846Z error: Error enviando SMS de recuperación:
2025-10-07T18:27:00.849Z error: Error enviando SMS de recuperación
2025-10-08T16:19:51.333Z error: Error: Ya existe un empleado activo con el documento 1088254968
    at RectorService.<anonymous> (/home/node/app/src/modulos/empleado/metodos/rector.service.ts:373:11)
    at Generator.next (<anonymous>)
    at fulfilled (/home/node/app/src/modulos/empleado/metodos/rector.service.ts:5:58)
2025-10-08T16:19:51.335Z error: Error: Ya existe un empleado activo con el documento 1088254968
    at RectorService.<anonymous> (/home/node/app/src/modulos/empleado/metodos/rector.service.ts:373:11)
    at Generator.next (<anonymous>)
    at fulfilled (/home/node/app/src/modulos/empleado/metodos/rector.service.ts:5:58)
2025-10-08T16:36:09.825Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261222",
         nombre: "pepe",
         apellido: "peralta",
         email: "musica@musica.com",
         telefono: "3205711428",
         ~~~~~~~~
         celular: "3205711428",
         cargo: "Rector",
         fecha_nacimiento: "2025-10-02",
         genero: "Masculino",
         estado_civil: "Soltero",
         direccion: "calle falsa 123",
         ciudad: "Pereira",
         departamento: "risalarda",
         id: "0cbb0414-65fd-41fa-a139-ccfc2eb271b1",
         estado: "activo",
         created_at: new Date("2025-10-08T16:36:09.520Z"),
         updated_at: new Date("2025-10-08T16:36:09.520Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `telefono`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T16:36:09.833Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261222",
         nombre: "pepe",
         apellido: "peralta",
         email: "musica@musica.com",
         telefono: "3205711428",
         ~~~~~~~~
         celular: "3205711428",
         cargo: "Rector",
         fecha_nacimiento: "2025-10-02",
         genero: "Masculino",
         estado_civil: "Soltero",
         direccion: "calle falsa 123",
         ciudad: "Pereira",
         departamento: "risalarda",
         id: "0cbb0414-65fd-41fa-a139-ccfc2eb271b1",
         estado: "activo",
         created_at: new Date("2025-10-08T16:36:09.520Z"),
         updated_at: new Date("2025-10-08T16:36:09.520Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `telefono`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T16:37:43.586Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261222",
         nombre: "pepe",
         apellido: "peralta",
         email: "musica@musica.com",
         telefono: "",
         ~~~~~~~~
         celular: "3205711428",
         cargo: "Rector",
         fecha_nacimiento: "2025-10-02",
         genero: "Masculino",
         estado_civil: "Soltero",
         direccion: "calle falsa 123",
         ciudad: "Pereira",
         departamento: "risalarda",
         id: "967750ae-44ab-4294-9972-637345926d9e",
         estado: "activo",
         created_at: new Date("2025-10-08T16:37:43.574Z"),
         updated_at: new Date("2025-10-08T16:37:43.574Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `telefono`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T16:37:43.589Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261222",
         nombre: "pepe",
         apellido: "peralta",
         email: "musica@musica.com",
         telefono: "",
         ~~~~~~~~
         celular: "3205711428",
         cargo: "Rector",
         fecha_nacimiento: "2025-10-02",
         genero: "Masculino",
         estado_civil: "Soltero",
         direccion: "calle falsa 123",
         ciudad: "Pereira",
         departamento: "risalarda",
         id: "967750ae-44ab-4294-9972-637345926d9e",
         estado: "activo",
         created_at: new Date("2025-10-08T16:37:43.574Z"),
         updated_at: new Date("2025-10-08T16:37:43.574Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `telefono`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T16:55:35.773Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261297",
         nombre: "Pepe",
         apellido: "Peralta",
         email: "pepe@pepe.com",
         celular: "320571429",
         ~~~~~~~
         cargo: "Rector",
         fecha_nacimiento: "2025-10-10",
         genero: "Masculino",
         estado_civil: "Soltero",
         direccion: "calle falsa 123",
         ciudad: "pereira",
         departamento: "risaralda",
         id: "b844a2a7-0cbf-4784-912b-a1bc44c6b758",
         estado: "activo",
         created_at: new Date("2025-10-08T16:55:35.472Z"),
         updated_at: new Date("2025-10-08T16:55:35.472Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `celular`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T16:55:35.782Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261297",
         nombre: "Pepe",
         apellido: "Peralta",
         email: "pepe@pepe.com",
         celular: "320571429",
         ~~~~~~~
         cargo: "Rector",
         fecha_nacimiento: "2025-10-10",
         genero: "Masculino",
         estado_civil: "Soltero",
         direccion: "calle falsa 123",
         ciudad: "pereira",
         departamento: "risaralda",
         id: "b844a2a7-0cbf-4784-912b-a1bc44c6b758",
         estado: "activo",
         created_at: new Date("2025-10-08T16:55:35.472Z"),
         updated_at: new Date("2025-10-08T16:55:35.472Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `celular`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T17:04:42.812Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261287",
         nombre: "Mateus",
         apellido: "Uribe",
         email: "seleccion@comobia.com",
         cargo: "Rector",
         fecha_nacimiento: "2025-10-02",
         ~~~~~~~~~~~~~~~~
         genero: "Femenino",
         direccion: "calle falsa 123",
         ciudad: "pereira",
         departamento: "risaralda",
         id: "ea88f9a3-b3c5-477f-9c64-b4539d045ad8",
         estado: "activo",
         created_at: new Date("2025-10-08T17:04:42.792Z"),
         updated_at: new Date("2025-10-08T17:04:42.792Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `fecha_nacimiento`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-10-08T17:04:42.817Z error: PrismaClientValidationError: 
Invalid `prisma.empleado.create()` invocation in
/home/node/app/src/modulos/empleado/metodos/rector.service.ts:27:52

  24 await this.validarDatosRector(data.empleado);
  25 
  26 // 2. Crear empleado rector
→ 27 const empleadoCreado = await prisma.empleado.create({
       data: {
         tipo_documento: "CC",
         documento: "1088261287",
         nombre: "Mateus",
         apellido: "Uribe",
         email: "seleccion@comobia.com",
         cargo: "Rector",
         fecha_nacimiento: "2025-10-02",
         ~~~~~~~~~~~~~~~~
         genero: "Femenino",
         direccion: "calle falsa 123",
         ciudad: "pereira",
         departamento: "risaralda",
         id: "ea88f9a3-b3c5-477f-9c64-b4539d045ad8",
         estado: "activo",
         created_at: new Date("2025-10-08T17:04:42.792Z"),
         updated_at: new Date("2025-10-08T17:04:42.792Z"),
     ?   asignacion_empleado?: asignacion_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   comentario_empleado?: comentario_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   documentos_empleado?: documentos_empleadoCreateNestedManyWithoutEmpleadoInput,
     ?   horas_extra?: horas_extraCreateNestedManyWithoutEmpleadoInput,
     ?   informacion_academica?: informacion_academicaCreateNestedManyWithoutEmpleadoInput,
     ?   institucion_educativa?: institucion_educativaCreateNestedManyWithoutEmpleadoInput,
     ?   suplencias_suplencias_docente_ausente_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_ausente_idToempleadoInput,
     ?   suplencias_suplencias_docente_reemplazo_idToempleado?: suplenciasCreateNestedManyWithoutEmpleado_suplencias_docente_reemplazo_idToempleadoInput
       }
     })

Unknown argument `fecha_nacimiento`. Available options are marked with ?.
    at throwValidationException (/home/node/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
    at ei.handleRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
    at ei.handleAndLogRequestError (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
    at ei.request (/home/node/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
    at a (/home/node/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
